@model IEnumerable<teste_cliente.Models.OfertaEmprego>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />

@{
    ViewData["Title"] = "Resultados de Emprego";
}

<div class="search-barra">
    <div class="container search-container mt-5">
        <form asp-controller="OfertaEmprego" asp-action="Index" method="get">
            <div class="row">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="search" name="search" placeholder="Função" value="@Context.Request.Query["search"]">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="localidade" name="localidade" placeholder="Localidade" value="@Context.Request.Query["localidade"]">
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text bg-white">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="regimeTrabalho" name="regimeTrabalho" placeholder="Regime Trabalho" value="@Context.Request.Query["regimeTrabalho"]">
                    </div>
                </div>
                <div class="col-md-1">
                    <div>
                        <button type="submit" class="btn text-white custom-link-button">Search</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="container mt-5">
    <h3 class="my-4 oferta_header">Resultados</h3>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }

    @foreach (var item in Model)
    {
        <div class="card mb-4 shadow-sm">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 d-flex flex-column align-items-center justify-content-center">
                        @if (!string.IsNullOrEmpty(item.LogoEmpresaBase64))
                        {
                            <img src="data:image/jpeg;base64,@item.LogoEmpresaBase64" alt="Logo Empresa" class="img-fluid company-logo" style="max-width: 120px;">
                        }
                        else
                        {
                            <img src="~/img/icone_perfil.png" alt="Logo Empresa" class="img-fluid company-logo" style="max-width: 120px;">
                        }
                        <div class="d-flex flex-column align-items-center mt-4">
                            @* <div class="rating">
                                <div class="stars mb-1">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                </div>
                            </div> *@

                            <!-- Verificar e exibir a média de avaliações usando a partial -->
                            @{
                                var reviews = ViewData[$"Reviews_{item.IdOferta}"] as List<teste_cliente.Models.Review> ?? new List<teste_cliente.Models.Review>();
                            }
                            <partial name="_RatingDisplay" model="reviews" />

                            <a asp-controller="Review" asp-action="Index" asp-route-empresaId="@item.IdEmpresa" class="text-muted small">Ver críticas ></a>
                            @if (User.IsInRole("Candidato"))
                            {
                                <a href="#" class="text-muted small mt-1" data-bs-toggle="modal" data-bs-target="#reviewModal-@item.IdEmpresa">Escrever crítica ></a>
                            }
                        </div>
                    </div>

                    <div class="col-md-3 d-flex flex-column align-items-left justify-content-center">
                        <h4 class="mb-3 job-title">@item.Titulo</h4>
                        <div class="row job-details">
                            <div class="col-6 small">
                                <p class="mb-1"><i class="far fa-clock me-2"></i> @item.Jornada</p>
                                <p class="mb-1"><i class="fas fa-map-marker-alt me-2"></i> @item.Localização</p>
                                <p class="mb-1"><i class="fas fa-home me-2"></i> @item.RegimeTrabalho</p>
                            </div>
                            <div class="col-6 small">
                                <p class="mb-1"><i class="fas fa-euro-sign me-2"></i> @item.Salario</p>
                                <p class="mb-1"><i class="fas fa-user-tie me-2"></i> @item.TipoContrato</p>
                                <p class="mb-1"><i class="fas fa-briefcase me-2"></i> @item.Requisitos</p>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-5">
                        <p class="card-text job-description">
                            @(item.Descricao.Length > 250 ? item.Descricao.Substring(0, 200) + "..." : item.Descricao)
                        </p>
                        <a asp-action="Details" asp-route-id="@item.IdOferta" class="btn btn me-2 text-white custom-link-button">Ver mais</a>                        
                    </div>
                    @if (User.IsInRole("Candidato")){
                    <div class="col-md-1 d-flex flex-column justify-content-center align-items-end">
                        @{
                            var favoritos = ViewBag.Favoritos as List<int> ?? new List<int>();
                            bool isFavorito = favoritos.Contains(item.IdOferta);
                        }
                        @Html.AntiForgeryToken()
                        <div class="favorite mb-3">
                            @{
                                var corFavorito = isFavorito ? "#FFD700" : "#ccc";
                            }

                            <i class="@(isFavorito ? "fas" : "far") fa-star fs-4 toggle-favorito"
                               data-id="@item.IdOferta"
                               style="cursor:pointer; color: @corFavorito;"></i>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>

        @if (User.IsInRole("Candidato"))
        {
            <div class="modal fade" id="reviewModal-@item.IdEmpresa" tabindex="-1" aria-labelledby="reviewModalLabel-@item.IdEmpresa" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="reviewModalLabel-@item.IdEmpresa">Adicionar Review</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form asp-controller="Review" asp-action="Create" method="post">
                                <input type="hidden" name="IdEmpresa" value="@item.IdEmpresa" />
                                <input type="hidden" name="NomeUsuario" value="@User.Identity.Name" />
                                <input type="hidden" name="DataCriacao" value="@DateTime.Now.ToString("o")" />

                                <div class="mb-3">
                                    <label for="titulo-@item.IdEmpresa" class="form-label">Título</label>
                                    <input type="text" class="form-control" id="titulo-@item.IdEmpresa" name="Titulo" required />
                                    <span class="text-danger field-validation-error" data-valmsg-for="Titulo" data-valmsg-replace="true"></span>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Rating</label>
                                    <br />
                                    <div class="rating-stars" id="rating-stars-@item.IdEmpresa">
                                        <input type="hidden" name="Rating" id="rating-value-@item.IdEmpresa" value="0" />
                                        <i class="far fa-star" data-value="1"></i>
                                        <i class="far fa-star" data-value="2"></i>
                                        <i class="far fa-star" data-value="3"></i>
                                        <i class="far fa-star" data-value="4"></i>
                                        <i class="far fa-star" data-value="5"></i>
                                    </div>
                                    <span class="text-danger" id="rating-error-@item.IdEmpresa"></span>
                                </div>

                                <div class="mb-3">
                                    <label for="descricao-@item.IdEmpresa" class="form-label">Descrição</label>
                                    <textarea class="form-control" id="descricao-@item.IdEmpresa" name="Descricao" rows="3" required></textarea>
                                    <span class="text-danger field-validation-error" data-valmsg-for="Descricao" data-valmsg-replace="true"></span>
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Voltar</button>
                                    <button type="submit" class="btn btn-primary">Inserir</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    <div class="d-flex justify-content-center mt-4">
        <nav>
            <ul class="pagination">
                @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == (int)ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new {
                        page = i,
                        search = ViewBag.Search,
                        localidade = ViewBag.Localidade,
                        regimeTrabalho = ViewBag.RegimeTrabalho
                    })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
    @section Styles {
        <style>
            .search-barra {
                background-color: #f0f0f0;
                padding-top: 20px;
                padding-bottom: 60px;
                width: 100%;
                margin-left: 0;
                margin-right: 0;
            }

            .search-container .input-group {
                border-radius: 25px;
            }

            .search-container .form-control {
                border-radius: 25px;
                height: 45px;
            }

            .search-container .input-group-text {
                border-radius: 25px;
            }

            .search-container .btn {
                border-radius: 20px;
                padding: 0.5rem 2rem;
            }

            .form-control:focus {
                border-color: #F2994A;
                box-shadow: 0 0 0 0.1rem rgba(242, 153, 74, 0.35);
                outline: 0;
            }

            .card {
                border-radius: 10px;
                border: none;
                background-color: #f9f9f9;
            }

            .job-title {
                font-weight: 600;
                border-bottom: 2px solid #5de4d9;
                display: inline-block;
                padding-bottom: 5px;
            }

            .job-details p {
                color: #6c757d;
            }

            .btn {
                border-radius: 20px;
                padding: 0.5rem 1.5rem;
            }

            .custom-link-button {
                background-color: #5de4d9;
                border: none;
                padding: 10px 30px;
                border-radius: 30px;
                font-size: 1rem;
                cursor: pointer;
                text-align: center;
                transition: background-color 0.3s ease;
                display: inline-block;
            }

            .custom-link-button:hover {
                background-color: #F2994A;
            }

            .company-logo {
                max-height: 60px;
                object-fit: contain;
            }

            /* Personalizando o botão "Voltar" */
            .btn-secondary {
                background-color: #F2994A;
                color: white;
                border: none;
            }

            /* Personalizando o botão "Inserir" */
            .btn-primary {
                background-color: #5de4d9;
                color: white;
                border: none;
            }

            /* Mudando a cor de fundo no hover */
            .btn-secondary:hover {
                background-color: #FF9F00;
            }

            .btn-primary:hover {
                background-color: #4fb3bf;
            }

            /* Cor do botão de paginação normal */
            .pagination .page-item .page-link {
                background-color: #5de4d9 !important;
                color: white !important;
                border: 1px solid #5de4d9 !important;
                transition: background-color 0.3s, color 0.3s;
            }

            /* Hover nos botões de paginação */
            .pagination .page-item .page-link:hover {
                background-color: #F2994A !important;
                color: white !important;
                border-color: #F2994A !important;
            }

            /* Cor do botão ativo (a página atual) */
            .pagination .page-item.active .page-link {
                background-color: #29A2A6 !important;
                border-color: #29A2A6 !important;
                color: white !important;
            }

            /* Remover o contorno do link da paginação ao ser focado */
            .pagination .page-item .page-link:focus {
                outline: none !important;
                box-shadow: none !important;
            }

            /* Estilo do sistema de estrelas no modal */
            .rating-stars {
                font-size: 18px;
                cursor: pointer;
                display: inline-block;
            }

                .rating-stars i {
                    margin-right: 2px;
                    color: #ccc;
                    transition: color 0.2s ease;
                }

                    .rating-stars i.far.fa-star {
                        color: #ccc;
                    }

                    .rating-stars i.fas.fa-star {
                        color: #f5c518;
                    }

                    .rating-stars i:hover {
                        color: #f5c518;
                    }

                .rating-stars svg {
                    display: none;
                }         
        </style>
    }

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />        
    <script>
        $(document).ready(function () {
            console.log('jQuery carregado e pronto!');

            // // Adiciona classe active ao clicar em favorito
            // $('.favorite').on('click', function () {
            //     $(this).find('i').toggleClass('far fas text-warning');
            // });

            // Reinicia o estado das estrelas ao abrir o modal
            $(document).on('show.bs.modal', '.modal', function () {
                var modalId = $(this).attr('id').replace('reviewModal-', '');
                var ratingStars = $('#rating-stars-' + modalId);
                var stars = ratingStars.find('.fa-star');

                console.log('Modal aberto para ID:', modalId);
                console.log('HTML do rating-stars:', ratingStars.html());
                console.log('Elementos estrelas encontrados:', stars.length);

                if (stars.length === 0) {
                    console.log('Atenção: Nenhum elemento <i> encontrado dentro de #rating-stars-' + modalId);
                    return;
                }

                var ratingInput = ratingStars.find('input[name="Rating"]');
                stars.removeClass('fas').addClass('far');
                ratingInput.val(0);
                console.log('Rating resetado para:', ratingInput.val());
                console.log('Classes das estrelas após reset:', stars.map(function() { return $(this).attr('class'); }).get());
            });

            // Evento de clique para as estrelas
            $(document).on('click', '.rating-stars .fa-star', function (e) {
                e.preventDefault();
                e.stopPropagation();

                var $star = $(this);
                console.log('Evento de clique disparado em:', $star);

                var modalId = $star.closest('.modal').attr('id').replace('reviewModal-', '');
                var ratingStars = $('#rating-stars-' + modalId);
                var value = parseInt($star.data('value'));
                var ratingInput = ratingStars.find('input[name="Rating"]');
                var stars = ratingStars.find('.fa-star');

                console.log('Clicou em valor:', value);

                ratingInput.val(value);
                ratingStars.siblings('#rating-error-' + modalId).text('');

                stars.each(function () {
                    var starValue = parseInt($(this).data('value'));
                    if (starValue <= value) {
                        $(this).removeClass('far').addClass('fas');
                    } else {
                        $(this).removeClass('fas').addClass('far');
                    }
                });
                console.log('Rating atualizado para:', ratingInput.val());
                console.log('Classes das estrelas após clique:', stars.map(function() { return $(this).attr('class'); }).get());
            });

            // Hover nas estrelas
            $(document).on('mouseenter', '.rating-stars .fa-star', function () {
                var $star = $(this);
                var hoverValue = parseInt($star.data('value'));
                var ratingStars = $star.closest('.rating-stars');
                var stars = ratingStars.find('.fa-star');

                stars.each(function () {
                    var starValue = parseInt($(this).data('value'));
                    if (starValue <= hoverValue) {
                        $(this).removeClass('far').addClass('fas');
                    } else {
                        $(this).removeClass('fas').addClass('far');
                    }
                });
            }).on('mouseleave', '.rating-stars', function () {
                var ratingStars = $(this);
                var modalId = ratingStars.closest('.modal').attr('id').replace('reviewModal-', '');
                var ratingInput = ratingStars.find('input[name="Rating"]');
                var currentValue = parseInt(ratingInput.val()) || 0;
                var stars = ratingStars.find('.fa-star');

                stars.each(function () {
                    var starValue = parseInt($(this).data('value'));
                    if (starValue <= currentValue) {
                        $(this).removeClass('far').addClass('fas');
                    } else {
                        $(this).removeClass('fas').addClass('far');
                    }
                });
            });

            // Validação do formulário ao enviar
            $(document).on('submit', 'form', function (e) {
                console.time('submitHandler');
                console.log('Iniciando submit handler');

                var ratingInput = $(this).find('input[name="Rating"]');
                var ratingValue = parseInt(ratingInput.val());
                var ratingError = $(this).find('#rating-error-' + ratingInput.attr('id').split('-')[2]);
                console.log('Rating verificado:', ratingValue);

                if (ratingValue === 0 || isNaN(ratingValue)) {
                    console.log('Rating inválido, cancelando submit');
                    ratingError.text('Por favor, selecione um rating de 1 a 5.');
                    e.preventDefault();
                } else {
                    console.log('Rating válido, ajustando valor');
                    ratingInput.val(Math.max(1, Math.min(5, ratingValue)));
                }

                console.log('Finalizando submit handler');
                console.timeEnd('submitHandler');
            });
        });

                //Botão dos favoritos.
                document.querySelectorAll('.toggle-favorito').forEach(el => {
                el.addEventListener('click', function () {
                    const id = parseInt(this.dataset.id);
                    if (id <= 0) return;
                                fetch('/OfertaEmprego/ToggleFavorito', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: `idOferta=${encodeURIComponent(id)}`
            })
                    .then(res => res.json())
                    .then(data => {
                        if (data.success) {
                            this.classList.toggle('fas');
                            this.classList.toggle('far');
                            this.style.color = data.isFavorito ? "#FFD700" : "#ccc";

                            atualizarBadgeFavoritos();
                        }
                    });
                });
            });
    </script>      
}
