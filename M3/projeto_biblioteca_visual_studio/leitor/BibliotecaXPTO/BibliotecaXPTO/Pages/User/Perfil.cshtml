@page
@model BibliotecaXPTO.Pages.User.PerfilModel
@{
    ViewData["Title"] = "Perfil";
}

<header>
    <nav class="sidebar">
        <div class="menu-icon">☰</div>
        <ul class="nav flex-column">
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="" asp-page="/User/Inicial">
                    <i class="fas fa-home"></i> <span class="menu-text">Inicial</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="" asp-page="/User/Obras">
                    <i class="fa fa-book" aria-hidden="true"></i>
                    <span class="menu-text">Obras</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="" asp-page="/User/Requisicoes">
                    <i class="fa fa-bookmark" aria-hidden="true"></i>
                    <span class="menu-text">Requisições</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="" asp-page="/User/Historico">
                    <i class="fa fa-history" aria-hidden="true"></i>
                    <span class="menu-text">Histórico</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="" asp-page="/User/Perfil">
                    <i class="fas fa-user"></i> <span class="menu-text">Perfil</span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white" asp-area="" asp-page="/User/Login" onclick="logout()">
                    <i class="fas fa-sign-out-alt"></i> <span class="menu-text">Sair</span>
                </a>
            </li>
        </ul>
    </nav>
</header>

<div class="container mt-5 perfil-container">
    <h2 class="mb-4 titulo">Dados Pessoais</h2>

    @if (TempData["Sucesso"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Sucesso"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Erro"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Erro"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form method="post">
        <div class="card shadow">
            <div class="card-body">
                <div class="row">
                    <!-- Campos mantêm o mesmo formato -->
                    <div class="col-md-6">
                        <div class="form-group"> 
                        <label>Nome Completo:</label>
                        <input asp-for="Perfil.Nome" type="text" class="form-control" readonly 
                               oninput="this.value=this.value.replace(/[^A-Za-zÀ-ÖØ-öø-ÿ\s]/g,'').replace(/\s{2,}/g, ' ')">                        
                    </div>

                    <div class="form-group">                       
                           <label>Email:</label>
                           <input asp-for="Perfil.Email" type="email" class="form-control" readonly oninput="validateEmail(this)" pattern="^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$">
                            <small class="text-danger d-none" id="emailError">Por favor, insira um e-mail válido (ex: nome@provedor.dominio).</small>
                    </div>

                        <div class="form-group">
                            <label>Telefone:</label>
                            <input asp-for="Perfil.Telefone"
                                   type="text"
                                   class="form-control"
                                   maxlength="9"
                                   oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0,9);"
                                   required>
                        </div>

                    <div class="form-group">
                        <label>Data de Nascimento:</label>
                        <input asp-for="Perfil.DataNascimento" type="date" class="form-control" readonly 
                               min="1900-01-01" max="@DateTime.Today.ToString("yyyy-MM-dd")">                        
                    </div>
                </div>

                <!-- Restante dos campos -->
                <div class="form-group">
                    <label>Nome de Usuário:</label>
                    <input asp-for="Perfil.Username" type="text" class="form-control input_nomeUsuario" readonly
                           oninput="this.value=this.value.replace(/\s/g,'')">                    
                </div>


                <div class="mt-4 d-flex gap-2">
                    <button type="button" id="btnEditar" class="btn btn-primary">Alterar Dados</button>
                    <button type="button" id="btnCancelar" class="btn btn-secondary d-none">Cancelar</button>
                    <button type="submit" id="btnSalvar" class="btn btn-success d-none">Salvar Alterações</button>
                    <button type="button" id="btnCancelarInscricao" class="btn btn-danger">Cancelar Inscrição</button>
                </div>
        </div>        
    </form>    
</div>
<!-- Modal de Confirmação -->
<div class="modal fade" id="confirmarCancelamentoModal" tabindex="-1" aria-labelledby="confirmarCancelamentoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmarCancelamentoModalLabel">Confirmar Cancelamento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Tem certeza que deseja cancelar sua inscrição? Esta ação não pode ser desfeita.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnConfirmarCancelamento">Confirmar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Sucesso -->
<div class="modal fade" id="sucessoCancelamentoModal" tabindex="-1" aria-labelledby="sucessoCancelamentoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sucessoCancelamentoModalLabel">Inscrição Cancelada</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Sua inscrição foi cancelada com sucesso. Você será redirecionado para a tela de login.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="btnFecharSucesso">Fechar</button>
            </div>
        </div>
    </div>
</div>

<style>
    .container {
        padding-top: 0px !important;
        margin-top: 0px !important;
    }

    .perfil-container {
        max-width: 550px;
        margin: 0 auto;
        padding: 20px;
    }

    .card {
        border-radius: 15px;
        border: none;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    label {
        font-weight: 600;
        color: #2c3e50;
    }

    input[readonly] {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
    }

    .d-none {
        display: none;
    }

    .btn {
        transition: all 0.3s;
    }

    input:read-only {
        background-color: #f8f9fa;
    }

    input:not([read-only]) {
        background-color: white;
        border: 1px solid #ced4da;
    }

    .input_nomeUsuario {
        width:300px;
    }

    .text-danger {
        color: #dc3545;
    }

    .d-none {
        display: none;
    }

    .mt-4 {
        display: flex;
        gap: 10px;
    }

    .btn-primary, .btn-success {
        background-color: #49c5b6;
        border: none;
    }

        .btn-primary:hover, .btn-success:hover {
            background-color: darkcyan;
        }

    .btn-danger {
        background-color: #F7B733;
        border: none;
    }

</style>

@section Scripts {
    @* <script>
        document.getElementById('btnEditar').addEventListener('click', () => {
            const inputs = document.querySelectorAll('input[readonly]');
            inputs.forEach(input => input.removeAttribute('readonly'));

            document.getElementById('btnEditar').classList.add('d-none');
            document.getElementById('btnSalvar').classList.remove('d-none');
            document.getElementById('btnCancelar').classList.remove('d-none');
        });

        document.getElementById('btnCancelar').addEventListener('click', () => {
            window.location.reload(); // Recarrega a página para descartar alterações
        });

        document.getElementById('btnCancelarInscricao').addEventListener('click', (e) => {
            e.preventDefault(); // Impede o envio do formulário
            const confirmarModal = new bootstrap.Modal(document.getElementById('confirmarCancelamentoModal'));
            confirmarModal.show();
        });

        //Processo para cancelar inscrição
        const userId = @HttpContext.Session.GetInt32("userID") ?? 0;
        console.log("UserID da Sessão:", userId);

        document.getElementById('btnConfirmarCancelamento').addEventListener('click', async () => {
            const confirmarModal = bootstrap.Modal.getInstance(document.getElementById('confirmarCancelamentoModal'));
            confirmarModal.hide();

            try {
                const formData = new FormData();
                    formData.append("userId", userId); // Adiciona o userId ao corpo da requisição

                    const response = await fetch(window.location.pathname + "?handler=CancelarInscricao", {
                        method: 'POST',
                        body: formData
                });

                console.log('Status:', response.status, response.statusText);

                const result = await response.json();
                console.log(result);

                if (response.ok) {
                    const sucessoModal = new bootstrap.Modal(document.getElementById('sucessoCancelamentoModal'));
                    sucessoModal.show();

                    document.getElementById('btnFecharSucesso').addEventListener('click', () => {
                        window.location.href = '/User/Login';
                    });
                } else {
                    alert('Não foi possível cancelar a inscrição. Tente novamente.');
                }
            } catch (error) {
                console.error('Erro:', error);
                alert('Erro ao cancelar inscrição. Tente novamente.');
            }
        });
        </script>*@
        <script>
        function validateEmail(input) {
            const emailPattern = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            const emailError = document.getElementById('emailError');

            if (!emailPattern.test(input.value)) {
                emailError.classList.remove('d-none');
                input.setCustomValidity('Por favor, insira um e-mail válido (ex: nome@provedor.dominio).');
            } else {
                emailError.classList.add('d-none');
                input.setCustomValidity('');
            }
        }

        document.getElementById('btnEditar').addEventListener('click', () => {
            const inputs = document.querySelectorAll('input[readonly]');
            inputs.forEach(input => input.removeAttribute('readonly'));

            document.getElementById('btnEditar').classList.add('d-none');
            document.getElementById('btnSalvar').classList.remove('d-none');
            document.getElementById('btnCancelar').classList.remove('d-none');
        });

        document.getElementById('btnCancelar').addEventListener('click', () => {
            window.location.reload(); // Recarrega a página para descartar alterações
        });

        document.getElementById('btnCancelarInscricao').addEventListener('click', (e) => {
            e.preventDefault(); // Impede o envio do formulário
            const confirmarModal = new bootstrap.Modal(document.getElementById('confirmarCancelamentoModal'));
            confirmarModal.show();
        });

        //Processo para cancelar inscrição
        const userId = @HttpContext.Session.GetInt32("userID") ?? 0;
        console.log("UserID da Sessão:", userId);

        document.getElementById('btnConfirmarCancelamento').addEventListener('click', async () => {
            const confirmarModal = bootstrap.Modal.getInstance(document.getElementById('confirmarCancelamentoModal'));
            confirmarModal.hide();

            try {
                const formData = new FormData();
                formData.append("userId", userId); // Adiciona o userId ao corpo da requisição

                const response = await fetch(window.location.pathname + "?handler=CancelarInscricao", {
                    method: 'POST',
                    body: formData
                });

                console.log('Status:', response.status, response.statusText);

                const result = await response.json();
                console.log(result);

                if (response.ok) {
                    const sucessoModal = new bootstrap.Modal(document.getElementById('sucessoCancelamentoModal'));
                    sucessoModal.show();

                    document.getElementById('btnFecharSucesso').addEventListener('click', () => {
                        window.location.href = '/User/Login';
                    });
                } else {
                    alert('Não foi possível cancelar a inscrição. Tente novamente.');
                }
            } catch (error) {
                console.error('Erro:', error);
                alert('Erro ao cancelar inscrição. Tente novamente.');
            }
        });
    </script>    
}